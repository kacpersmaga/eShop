@{
    ViewBag.Title = "Add New Item";
    Layout = "_Layout";
}

<div class="container">
    <h2 class="mt-4 mb-3">Add New Item</h2>

    <div id="successMessage" class="alert alert-success d-none"></div>
    <div id="errorMessage" class="alert alert-danger d-none"></div>

    <form id="addItemForm" enctype="multipart/form-data">
        <div class="mb-3">
            <label for="Name" class="form-label">Item Name</label>
            <input type="text" id="Name" name="Name" class="form-control" required />
        </div>

        <div class="mb-3">
            <label for="Price" class="form-label">Price</label>
            <input type="number" id="Price" name="Price" class="form-control" step="0.01" required />
        </div>

        <div class="mb-3">
            <label for="Description" class="form-label">Description</label>
            <textarea id="Description" name="Description" class="form-control"></textarea>
        </div>

        <div class="mb-3">
            <label for="Category" class="form-label">Category</label>
            <select id="Category" name="Category" class="form-select" required>
                <option value="" disabled selected>Choose a category</option>
                <option value="Electronics">Electronics</option>
                <option value="Clothing">Clothing</option>
                <option value="Books">Books</option>
                <option value="Home Appliances">Home Appliances</option>
            </select>
        </div>

        <div class="mb-3">
            <label for="Image" class="form-label">Upload Image (Optional)</label>
            <input type="file" id="Image" name="Image" class="form-control" accept="image/*" />
        </div>

        <button type="button" class="btn btn-primary" onclick="submitItem()">Add Item</button>
    </form>
</div>

<script>
    function getCookie(name) {
        const value = `; ${document.cookie}`;
        const parts = value.split(`; ${name}=`);
        if (parts.length === 2) {
            return parts.pop().split(';').shift();
        }
        return "";
    }

    async function submitItem() {
        const formData = new FormData(document.getElementById('addItemForm'));
        const xsrfToken = getCookie('XSRF-TOKEN');

        try {
            const response = await fetch('/api/admin/add', {
                method: 'POST',
                headers: {
                    'X-CSRF-TOKEN': xsrfToken
                },
                credentials: 'include',
                body: formData
            });

            const result = await response.json();

            if (response.ok) {
                document.getElementById('successMessage').classList.remove('d-none');
                document.getElementById('successMessage').innerText = result.message;
                document.getElementById('errorMessage').classList.add('d-none');
                document.getElementById('addItemForm').reset();
            } else {
                document.getElementById('errorMessage').classList.remove('d-none');
                document.getElementById('errorMessage').innerText = result.error || "An error occurred";
                document.getElementById('successMessage').classList.add('d-none');
            }
        } catch (error) {
            document.getElementById('errorMessage').classList.remove('d-none');
            document.getElementById('errorMessage').innerText = "An unexpected error occurred";
        }
    }
</script>