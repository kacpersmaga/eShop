@{
    ViewData["Title"] = "Login";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Login</h2>

<div id="message" style="color:red; margin-bottom:10px;"></div>

<form id="loginForm">
    <div>
        <label for="userName">User Name</label>
        <input type="text" id="userName" name="userName" required />
    </div>
    <div>
        <label for="password">Password</label>
        <input type="password" id="password" name="password" required />
    </div>
    <div>
        <button type="submit">Login</button>
    </div>
</form>

<script>
    function getCookie(name) {
        const value = `; ${document.cookie}`;
        const parts = value.split(`; ${name}=`);
        return parts.length === 2 ? parts.pop().split(';').shift() : "";
    }

    document.getElementById("loginForm").addEventListener("submit", async function(e) {
        e.preventDefault();
        const messageElement = document.getElementById("message");
        messageElement.innerText = "";
        messageElement.style.color = "red";

        const userName = document.getElementById("userName").value;
        const password = document.getElementById("password").value;
        const xsrfToken = getCookie('XSRF-TOKEN');

        try {
            const response = await fetch('/api/auth/login', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-TOKEN': xsrfToken
                },
                credentials: 'include',
                body: JSON.stringify({ userName, password })
            });

            const result = await response.json();

            if (response.ok) {
                if (result.requiresTwoFactor) {
                    sessionStorage.setItem("pendingUserName", userName);
                    window.location.href = "/Account/Verify2fa";
                } else {
                    messageElement.style.color = "green";
                    messageElement.innerText = "Login successful. Redirecting...";
                    
                    setTimeout(() => { window.location.href = "/"; }, 2000);
                }
            } else {
                if (result.errors && result.errors.auth) {
                    messageElement.innerText = result.errors.auth[0];
                } else {
                    messageElement.innerText = "Invalid login attempt.";
                }
            }
        } catch (error) {
            console.error('Login error:', error);
            messageElement.innerText = "An error occurred. Please try again.";
        }
    });
</script>