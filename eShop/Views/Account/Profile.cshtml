@{
    ViewData["Title"] = "Profile";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Account Profile</h2>

<div class="row">
    <div class="col-md-6">
        <div class="card mb-4">
            <div class="card-header">
                <h3>Profile Information</h3>
            </div>
            <div class="card-body">
                <form id="profileForm">
                    <div class="form-group mb-3">
                        <label for="userName">Username</label>
                        <input type="text" class="form-control" id="userName" name="userName" readonly />
                    </div>
                    <div class="form-group mb-3">
                        <label for="email">Email</label>
                        <input type="email" class="form-control" id="email" name="email" readonly />
                        <small id="emailStatus" class="form-text"></small>
                    </div>
                    <div class="form-group mb-3">
                        <label for="phoneNumber">Phone Number</label>
                        <div class="input-group">
                            <input type="tel" class="form-control" id="phoneNumber" name="phoneNumber" placeholder="+1234567890" />
                            <button type="button" id="updatePhoneBtn" class="btn btn-outline-secondary">Update</button>
                        </div>
                        <small id="phoneStatus" class="form-text"></small>
                    </div>
                    <div id="phoneVerification" style="display:none;" class="mt-3">
                        <div class="form-group">
                            <label for="phoneCode">Verification Code</label>
                            <input type="text" class="form-control" id="phoneCode" name="phoneCode" />
                        </div>
                        <button type="button" id="verifyPhoneBtn" class="btn btn-primary mt-2">Verify Phone</button>
                    </div>
                </form>
                <div id="profileMessage" class="mt-3"></div>
            </div>
        </div>

        <div class="card">
            <div class="card-header">
                <h3>Security Settings</h3>
            </div>
            <div class="card-body">
                <div class="mb-3">
                    <h4>Two-Factor Authentication</h4>
                    <p id="twoFactorStatus">Loading status...</p>
                    <div id="twoFactorControls">
                        <a href="/Account/Enable2fa" class="btn btn-primary" id="enable2faBtn">Enable 2FA</a>
                        <button class="btn btn-danger" id="disable2faBtn" style="display:none;">Disable 2FA</button>
                    </div>
                </div>
                <div class="mt-4">
                    <h4>Change Password</h4>
                    <a href="/Account/ChangePassword" class="btn btn-secondary">Change Password</a>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', async function() {
        await loadUserProfile();
    });

    async function loadUserProfile() {
        try {
            const response = await fetch('/api/user/profile', {
                method: 'GET',
                credentials: 'include'
            });

            if (response.ok) {
                const user = await response.json();
                document.getElementById('userName').value = user.userName;
                document.getElementById('email').value = user.email;
                
                const emailStatus = document.getElementById('emailStatus');
                if (user.emailConfirmed) {
                    emailStatus.innerText = 'Email verified';
                    emailStatus.classList.add('text-success');
                } else {
                    emailStatus.innerHTML = 'Email not verified. <a href="#" id="resendEmailBtn">Resend verification email</a>';
                    emailStatus.classList.add('text-danger');
                    document.getElementById('resendEmailBtn').addEventListener('click', resendEmailConfirmation);
                }
                
                if (user.phoneNumber) {
                    document.getElementById('phoneNumber').value = user.phoneNumber;
                    const phoneStatus = document.getElementById('phoneStatus');
                    if (user.phoneNumberConfirmed) {
                        phoneStatus.innerText = 'Phone verified';
                        phoneStatus.classList.add('text-success');
                    } else {
                        phoneStatus.innerHTML = 'Phone not verified. <a href="#" id="verifyPhoneLink">Verify now</a>';
                        phoneStatus.classList.add('text-danger');
                        document.getElementById('verifyPhoneLink').addEventListener('click', sendPhoneVerification);
                    }
                }
                
                const twoFactorStatus = document.getElementById('twoFactorStatus');
                if (user.twoFactorEnabled) {
                    twoFactorStatus.innerText = '2FA is currently enabled using ' + (user.twoFactorType || 'Authenticator App');
                    twoFactorStatus.classList.add('text-success');
                    document.getElementById('enable2faBtn').style.display = 'none';
                    document.getElementById('disable2faBtn').style.display = 'inline-block';
                } else {
                    twoFactorStatus.innerText = '2FA is currently disabled';
                    twoFactorStatus.classList.add('text-warning');
                }
            } else {
                const errorMsg = await response.text();
                showMessage('profileMessage', 'Failed to load profile: ' + errorMsg, 'danger');
            }
        } catch (error) {
            showMessage('profileMessage', 'An error occurred while loading your profile.', 'danger');
        }
    }

    document.getElementById('updatePhoneBtn').addEventListener('click', async function() {
        const phoneNumber = document.getElementById('phoneNumber').value;
        const xsrfToken = getCookie('XSRF-TOKEN');
        
        if (!phoneNumber) {
            showMessage('profileMessage', 'Please enter a phone number', 'danger');
            return;
        }
        
        try {
            const response = await fetch('/api/user/update-phone', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-TOKEN': xsrfToken
                },
                credentials: 'include',
                body: JSON.stringify({ phoneNumber })
            });
            
            if (response.ok) {
                showMessage('profileMessage', 'Phone number updated. Verification code sent.', 'success');
                document.getElementById('phoneVerification').style.display = 'block';
            } else {
                const result = await response.json();
                showMessage('profileMessage', result.message || 'Failed to update phone number', 'danger');
            }
        } catch (error) {
            showMessage('profileMessage', 'An error occurred', 'danger');
        }
    });
    
    document.getElementById('verifyPhoneBtn').addEventListener('click', async function() {
        const code = document.getElementById('phoneCode').value;
        const xsrfToken = getCookie('XSRF-TOKEN');
        
        try {
            const response = await fetch('/api/user/verify-phone', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-TOKEN': xsrfToken
                },
                credentials: 'include',
                body: JSON.stringify({ code })
            });
            
            if (response.ok) {
                showMessage('profileMessage', 'Phone number verified successfully', 'success');
                document.getElementById('phoneVerification').style.display = 'none';
                await loadUserProfile();
            } else {
                const result = await response.json();
                showMessage('profileMessage', result.message || 'Failed to verify phone number', 'danger');
            }
        } catch (error) {
            showMessage('profileMessage', 'An error occurred', 'danger');
        }
    });
    
    async function sendPhoneVerification(e) {
        e.preventDefault();
        const xsrfToken = getCookie('XSRF-TOKEN');
        
        try {
            const response = await fetch('/api/user/send-phone-verification', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-TOKEN': xsrfToken
                },
                credentials: 'include'
            });
            
            if (response.ok) {
                showMessage('profileMessage', 'Verification code sent', 'success');
                document.getElementById('phoneVerification').style.display = 'block';
            } else {
                const result = await response.json();
                showMessage('profileMessage', result.message || 'Failed to send verification code', 'danger');
            }
        } catch (error) {
            showMessage('profileMessage', 'An error occurred', 'danger');
        }
    }
    
    async function resendEmailConfirmation(e) {
        e.preventDefault();
        const xsrfToken = getCookie('XSRF-TOKEN');
        
        try {
            const response = await fetch('/api/auth/send-confirmation-email', {
                method: 'POST',
                headers: {
                    'X-CSRF-TOKEN': xsrfToken
                },
                credentials: 'include'
            });
            
            if (response.ok) {
                showMessage('profileMessage', 'Confirmation email sent successfully', 'success');
            } else {
                const result = await response.json();
                showMessage('profileMessage', result.message || 'Failed to send confirmation email', 'danger');
            }
        } catch (error) {
            showMessage('profileMessage', 'An error occurred', 'danger');
        }
    }
    
    document.getElementById('disable2faBtn').addEventListener('click', async function() {
        if (!confirm('Are you sure you want to disable two-factor authentication? This will decrease your account security.')) {
            return;
        }
        
        const xsrfToken = getCookie('XSRF-TOKEN');
        
        try {
            const response = await fetch('/api/user/disable-2fa', {
                method: 'POST',
                headers: {
                    'X-CSRF-TOKEN': xsrfToken
                },
                credentials: 'include'
            });
            
            if (response.ok) {
                showMessage('profileMessage', 'Two-factor authentication has been disabled', 'success');
                await loadUserProfile();
            } else {
                const result = await response.json();
                showMessage('profileMessage', result.message || 'Failed to disable 2FA', 'danger');
            }
        } catch (error) {
            showMessage('profileMessage', 'An error occurred', 'danger');
        }
    });
    
    function showMessage(elementId, message, type) {
        const element = document.getElementById(elementId);
        element.innerText = message;
        element.className = `alert alert-${type}`;
    }

    function getCookie(name) {
        const value = `; ${document.cookie}`;
        const parts = value.split(`; ${name}=`);
        return parts.length === 2 ? parts.pop().split(';').shift() : "";
    }
</script>