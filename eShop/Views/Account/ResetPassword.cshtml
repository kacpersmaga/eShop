@{
    ViewData["Title"] = "Reset Password";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Reset Password</h2>

<form id="resetPasswordForm">
    <div id="message" style="color:red; margin-bottom:10px;"></div>

    <input type="hidden" id="userId" name="userId" />
    <input type="hidden" id="token" name="token" />

    <div>
        <label for="newPassword">New Password</label>
        <input type="password" id="newPassword" name="newPassword" required />
    </div>

    <div>
        <label for="confirmPassword">Confirm Password</label>
        <input type="password" id="confirmPassword" name="confirmPassword" required />
    </div>

    <button type="submit">Reset Password</button>
</form>

<script>
    function getParameterByName(name) {
        const url = window.location.href;
        name = name.replace(/[\[\]]/g, '\\$&');
        const regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),
            results = regex.exec(url);
        if (!results) return null;
        if (!results[2]) return '';
        return decodeURIComponent(results[2].replace(/\+/g, ' '));
    }
    
    const userId = getParameterByName("userId");
    const token = getParameterByName("token");
    document.getElementById("userId").value = userId || "";
    document.getElementById("token").value = token || "";
    
    if (!userId || !token) {
        document.getElementById("message").innerText = "Invalid password reset link. Please request a new one.";
        document.getElementById("resetPasswordForm").style.display = "none";
    }

    document.getElementById("resetPasswordForm").addEventListener("submit", async function (e) {
        e.preventDefault();

        const newPassword = document.getElementById("newPassword").value;
        const confirmPassword = document.getElementById("confirmPassword").value;

        if (newPassword !== confirmPassword) {
            document.getElementById("message").innerText = "Passwords do not match.";
            return;
        }

        const data = {
            userId: userId,
            token: token,
            newPassword: newPassword
        };

        const xsrfToken = getCookie('XSRF-TOKEN');

        try {
            const response = await fetch('/api/auth/reset-password', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-TOKEN': xsrfToken
                },
                credentials: 'include',
                body: JSON.stringify(data)
            });

            const result = await response.json();

            if (response.ok) {
                document.getElementById("message").style.color = "green";
                document.getElementById("message").innerText = "Password reset successful. Redirecting to login...";
                setTimeout(() => {
                    window.location.href = "/Account/Login";
                }, 2000);
            } else {
                document.getElementById("message").innerText =
                    result.errors?.password?.[0] ||
                    result.message ||
                    "Failed to reset password.";
            }
        } catch (error) {
            document.getElementById("message").innerText = "An error occurred. Please try again.";
        }
    });

    function getCookie(name) {
        const value = `; ${document.cookie}`;
        const parts = value.split(`; ${name}=`);
        return parts.length === 2 ? parts.pop().split(';').shift() : "";
    }
</script>